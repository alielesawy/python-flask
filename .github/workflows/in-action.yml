name: Flask CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --break-system-packages -r requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Tag Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask-jenkins-test:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-jenkins-test:latest

      - name: Run Docker Container
        run: docker run -d -p 5050:5000 --name flask_test ${{ secrets.DOCKERHUB_USERNAME }}/flask-jenkins-test:latest

      - name: Cleanup Docker Container
        if: always()
        run: |
          docker stop flask_test || true
          docker rm flask_test || true

      - name: Slack Notification (Success)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"✅ Build & Push succeeded for flask-jenkins-test."}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Notification (Failure)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"❌ Build or Push failed for flask-jenkins-test."}' ${{ secrets.SLACK_WEBHOOK_URL }}
